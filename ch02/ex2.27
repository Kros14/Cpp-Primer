//下面的哪些初始化是合法的？原因是？
(a)int i=-1,&r=0;
  //不合法，引用所指的对象必须是左值。
(b)int *const p2=&i2;
  //合法。
(c)const int i =-1,&r=0;
  //不合法,同(a)
(d)const int *const p3 = &i2;
  //合法，p3是一个常量指针常量，不可以指向别的对象，也不能通过p3改变所指对象的值。
(e)const int *p1=&i2;
  //合法。
  
(f)const int &const r2;
  //不合法。
  //特别注意//      //第一个const是限定引用不可修改所指对象。e.g. const &r=i; r=2; ##error## 常量引用不能修改所指对象的值。
  //               //第二个const是限定引用不可改变所指对象，而引用本身的定义就不可以改变所指对象，效果重复，但是不会报错。
  //               //所以这条语句相当于：const int& r2;
  //               //常量引用必须初始化，所以不合法。
  
(g)const int i2=i,&r=i;
  //合法。定义并初始化了一个int常量i2，常量引用r指向i；
  //int前的const定义给了这句语句中所有的声明符。
