//ex2.30:对于下面的这些语句，请说明对象被声明成了顶层const还是底层const？
const int v2 = 0;//底层const
int v1=v2;  //不是常量
int *p1=&v1,&r1=v1; //r1是引用，默认为顶层const
const int *p2=&v2,*const p3=&i,&r2=v2; //p2是底层const，p3既是顶层又是底层，r2即是底层又是顶层（标准认为引用都是底层const）


//ex2.31:假设已有上个练习中所作的声明，则下面哪些语句是合法的？请说明顶层const和底层const在每个例子中有何体现。
r1=v2;    //不合法，v2是一个底层const，r1是普通引用。这样会导致const限定符被丢弃。
p1=p2;    //不合法，因为p1是普通指针，p2是常量指针是底层const。
p2=p1;    //合法，因为普通指针可以转化为常量指针，赋值给底层const。
p1=p3;    //不合法，p1是普通指针，p3即使顶层又是底层const。
p2=p3;    //合法，因为p2和p3都是底层const，拷贝时顶层const可以不考虑。
